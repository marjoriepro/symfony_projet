{% extends "front/base.html.twig" %}

{% block main %}
    <div class="container">
	<h2>{{ product.name }}</h2>
	<h3>Prix : {{ product.price }} €</h3>
	<h3>Stock : {{ product.stock }} pièces </h3>
    <h4> Licence : {{ product.licence.name}} </h4>
    <h4> Catégorie : {{ product.category.name }}</h4>

	{% for image in product.media %}

		<img src="{{ asset('media/' ~ image.src) }}" alt="{{ image.alt }}">

	{% endfor %}

    <a
			href="{{ path("product_like", {'id' : product.id}) }}" class="btn btn-link js-likes">
			{# app.user est la variable qui enregistre le user connecté si 
																																																																				personne n'est connecté la variable est vide.#}
			{% if app.user and product.isLikedByUser(app.user) %}
				<i class="fas fa-thumbs-up"></i>
			{% else %}
				<i class="far fa-thumbs-up"></i>
			{% endif %}
			<span class="js-likes">{{ product.likes | length }}</span>
			<span class="js-label">J'aime</span>
		</a>

        </div>

    

	 <div class="comment">
        <div>
            <h3>Commentaires</h3>
        </div>
        {% for comment in product.comments %}
		
            <h4>Par {{ comment.user.firstname}} {{ comment.user.name }}, le {{ comment.date | date('d-m-y') }}</h4>
            <p>{{ comment.content }}</p>
    

		{% if app.user is same as(comment.user) %}
		
			<a href="{{ path('update_comment', {'id' : comment.id})}}">Modifier le commentaire</a>
            <a href="{{ path('delete_comment', {'id' : comment.id})}}">Supprimer le commentaire</a>
		
		{% endif %}

		{% endfor %}

        {% if app.user %}
            <div>
                {{ form(commentForm) }}
            </div>

            {% else %}

            <div>
                <p>Vous devez être connecté pour écrire un commentaire</p>
            </div>

        {% endif %}
    </div>



    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
function onClickLike(event){
    event.preventDefault();
    const url = this.href;
    const spanCount = this.querySelector('span.js-likes');
    const icone = this.querySelector('i');
    axios.get(url).then(function (response){
        spanCount.textContent = response.data.likes;
        if(icone.classList.contains('fas')){
            icone.classList.replace('fas', 'far');
        } else{
            icone.classList.replace('far', 'fas');
        }
    }).catch(function(error){
        if(error.response.status == 403)
        {
            window.alert("Connexion requise")
        }else {
            window.alert("une erreur c'est produite");
        }
    });
}
document.querySelectorAll('a.js-likes').forEach(function (link){
    link.addEventListener('click', onClickLike)
})
</script>



{% endblock %}